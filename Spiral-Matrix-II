class Solution {
public:
    vector<vector<int> > generateMatrix(int n) {
        vector<vector<int> > m;
        for (int i = 0; i < n; i++)
        {
            vector<int> v;
            for (int k = 0; k < n; k++)
                v.push_back(0);
            m.push_back(v);
        }
        // 4个方向
        int g[] = {0,1, 1,0, 0,-1, -1,0};
        int count = 1;
        int gi = 0; // 方向索引
        int i = 0;
        int k = -1;
        int nn = n*n;
        while (count <= nn)
        {
            int newi = i+g[gi];
            int newk = k+g[gi+1];
            if (newi >= n || newi < 0 || newk >= n || newk < 0 || m[newi][newk] > 0)
            {
                // 如果不能走，就换方向
                gi = (gi+2)%8;
                continue;
            }
            m[newi][newk] = count++;
            i = newi;
            k = newk;
        }
        return m;
    }
};  
