// 最简单的赋值到临时矩阵，然后再赋值回原矩阵，不过题目要求在原矩阵修改
// 最节省空间的就是用一个临时变量，每次替换一个值，遍历所有需要交换的地方，不过这个计算坐标比较麻烦
class Solution {
public:
    void rotate(vector<vector<int> > &matrix) {
        int n = matrix.size();
        int i = 0;
        int k = 0;
        int layer = 0;
        while (n > 1)
        {
            for (int i = 0, k = 0; k < n-1; k++)
            {
                int t = matrix[i+layer][k+layer];
                matrix[i+layer][k+layer] = matrix[n-1-k+layer][i+layer];
                matrix[n-1-k+layer][i+layer] = matrix[n-1+layer][n-1-k+layer];
                matrix[n-1+layer][n-1-k+layer] = matrix[k+layer][n-1+layer];
                matrix[k+layer][n-1+layer] = t;
            }
            n-=2;
            layer++;
        }
    }
};
